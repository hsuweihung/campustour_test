<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.20.11">

    
  <!-- Spot Style - Default Point Spot Style -->


  <style name="IconDefaultPointSpotStyle"
         url="%FIRSTXML%/spots/hotspot_neutral_user_defaultpoint0.png"
         visible="false"
         edge="center"
         onhover="onhoverIconDefaultPointSpotStyle"
         onout="onoutIconDefaultPointSpotStyle"


         />
  <action name="onhoverIconDefaultPointSpotStyle">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconDefaultPointSpotStyle">
    hideTooltip();



  </action>



  <!-- unsupported kind of display : PointMap -->


  
  <!-- Spot Style - openVideo -->
  <style name="PolygonopenVideo"
           subdiv="true"
           visible="false"
           bordercolor="0xffffff"
           fillcolor="0xffffff"
           borderwidth="1"
           borderalpha="0"
           fillalpha="0"
           capture="false"
           onhover="onhoverPolygonopenVideo"
           onover="onoverPolygonopenVideo"
           onout="onoutPolygonopenVideo"
           />
  <action name="onhoverPolygonopenVideo">
    showTooltip('hotspot');
  </action>

  <action name="onoverPolygonopenVideo">
    set(bordercolor, 0xffffff);
    set(fillcolor, 0xffffff);
    set(borderalpha, 0.80000000000000004);
    set(fillalpha, 0.59999999999999998);
    set(borderwidth, 3);
  </action>

  <action name="onoutPolygonopenVideo">

    set(bordercolor, 0xffffff);
    set(fillcolor, 0xffffff);
    set(borderalpha, 0);
    set(fillalpha, 0);

    set(borderwidth, 1);
    hideTooltip();
  </action>



        
  <!-- Video Spot Style - play -->
  <style name="RectVideoplayLoader" url="%FIRSTXML%/spots/loadanimation.png" crop="0|0|64|64" ypos="0" frame="0" distorted="true" visible="false" />
  <style name="RectVideoplay"
         capture="false"
         visible="false"
         distorted="true"
         scale="1.0"
         url.flash="%VIEWER%/graphics/videoplayer.swf"
         url.html5="%FIRSTXML%/graphics/videoplayer.js"
         loop="true"
         autoresume="true"
         pausedonstart="true"
         pausedonstart.android="false"
         pauseothersounds="true"
         canstart="false"
         onhover="onhoverRectVideoplay"
         onout="onoutRectVideoplay"
         onvideoready="onvideoreadyRectVideoplay"
         />
  <style name="RectVideoplay" 
    directionalsound="true" 
    range="90" 
    devices="flash" 
  />
  <style name="RectVideoplay" 
    directionalsound="false" 
    devices="html5" 
  />
  <style name="RectVideoplay" stateVideo="startplaying" devices="no-ios"/>
  <style name="RectVideoplay" stateVideo="startpaused"  devices="ios"   />
  <style name="RectVideoplay" stateVideo="startplaying" devices="ios10" />
  <action name="onhoverRectVideoplay">
    showTooltip('hotspot');
  </action>
  <action name="onoutRectVideoplay">
    hideTooltip();
  </action>
  <action name="onvideoreadyRectVideoplay">
    set(isVideoReadyForPlaying, false);
    if (isvideoready,
      if(panovideospotsstate,set(canstart, true););
      if (canstart,
        set(isVideoReadyForPlaying, true);
      );
    );
    if(isVideoReadyForPlaying,
    ifnot(device.ios,
      inc(videospots_playing);
      pauseTourSoundsActions(true,true,true,true,true);
    );

    if(tour_displayspots,
      if(ispaused,
        if(stateVideo == "startplaying",
          set(stateVideo, "playing");
          play();
        );
      );
    );
    if (tour_soundson,
      div(volume, tour_soundsvolume, 100);
    ,
      set(volume, 0);
    );
    onvideoreadyspecific();
    ,

      delayedcall(0.5,onvideoreadyRectVideoplay());
    );
  </action>
  <action name="animatevideospotloaderRectVideoplay">
    if(hotspot[%1],
      if(hotspot[%1].activated,
        set(hotspot[%1].visible, true);
      );
      inc(hotspot[%1].frame,1, 11,0);
      mul(hotspot[%1].ypos, hotspot[%1].frame, 64);
      txtadd(hotspot[%1].crop, '0|', get(hotspot[%1].ypos),'|64|64');
      delayedcall(%2, 0.1, animatevideospotloaderRectVideoplay(%1, %2) );
    ,
      stopdelayedcall(%2);
    );
  </action>
  <action name="stopvideospotloaderanimationRectVideoplay">
    removehotspot(%1);
  </action>



    
  <!-- Spot Style - openWeb_libary -->


  <style name="IconopenWeb_libary"
         url="%FIRSTXML%/spots/libary_user_defaultpoint1.png"
         visible="false"
         edge="center"
         onhover="onhoverIconopenWeb_libary"
         onover="onoverIconopenWeb_libary"
         onout="onoutIconopenWeb_libary"


         width="150"
         height="prop"
         />
  <action name="onhoverIconopenWeb_libary">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconopenWeb_libary">
tween(scale, 1.2);


  </action>
  <action name="onoutIconopenWeb_libary">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - info -->


  <style name="Iconinfo"
         url="%FIRSTXML%/spots/point2_user_defaultpoint4.png"
         visible="false"
         edge="center"
         onhover="onhoverIconinfo"
         onout="onoutIconinfo"


         width="15"
         height="prop"
         />
  <action name="onhoverIconinfo">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconinfo">
    hideTooltip();



  </action>



    
  <!-- Spot Style - goScene -->


  <style name="IcongoScene"
         url="%FIRSTXML%/spots/walkspot_next_user_defaultpoint5.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIcongoScene"
         onover="onoverIcongoScene"
         onout="onoutIcongoScene"


         width="80"
         height="prop"
         />
  <action name="onhoverIcongoScene">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoScene">

tween(alpha, 1);

  </action>
  <action name="onoutIcongoScene">
    hideTooltip();

    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - goScene_right -->


  <style name="IcongoScene_right"
         url="%FIRSTXML%/spots/walkspot_right_user_defaultpoint6.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIcongoScene_right"
         onover="onoverIcongoScene_right"
         onout="onoutIcongoScene_right"


         width="80"
         height="prop"
         />
  <action name="onhoverIcongoScene_right">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoScene_right">

tween(alpha, 1);

  </action>
  <action name="onoutIcongoScene_right">
    hideTooltip();

    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - goScene_left -->


  <style name="IcongoScene_left"
         url="%FIRSTXML%/spots/walkspot_left_user_defaultpoint7.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIcongoScene_left"
         onover="onoverIcongoScene_left"
         onout="onoutIcongoScene_left"


         width="80"
         height="prop"
         />
  <action name="onhoverIcongoScene_left">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoScene_left">

tween(alpha, 1);

  </action>
  <action name="onoutIcongoScene_left">
    hideTooltip();

    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - goInside_5 -->


  <style name="IcongoInside_5"
         url="%FIRSTXML%/spots/sidebar5_user_defaultpoint3.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoInside_5"
         onover="onoverIcongoInside_5"
         onout="onoutIcongoInside_5"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoInside_5">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoInside_5">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoInside_5">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - goInside_2 -->


  <style name="IcongoInside_2"
         url="%FIRSTXML%/spots/sidebar1_user_defaultpoint8.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoInside_2"
         onover="onoverIcongoInside_2"
         onout="onoutIcongoInside_2"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoInside_2">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoInside_2">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoInside_2">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - goInside_6 -->


  <style name="IcongoInside_6"
         url="%FIRSTXML%/spots/sidebar6_user_defaultpoint9.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoInside_6"
         onover="onoverIcongoInside_6"
         onout="onoutIcongoInside_6"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoInside_6">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoInside_6">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoInside_6">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - goInside_3 -->


  <style name="IcongoInside_3"
         url="%FIRSTXML%/spots/sidebar3_user_defaultpoint10.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoInside_3"
         onover="onoverIcongoInside_3"
         onout="onoutIcongoInside_3"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoInside_3">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoInside_3">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoInside_3">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - goInside_7 -->


  <style name="IcongoInside_7"
         url="%FIRSTXML%/spots/sidebar7_user_defaultpoint11.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoInside_7"
         onover="onoverIcongoInside_7"
         onout="onoutIcongoInside_7"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoInside_7">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoInside_7">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoInside_7">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - info_left -->


  <style name="Iconinfo_left"
         url="%FIRSTXML%/spots/point2_user_defaultpoint13.png"
         visible="false"
         edge="center"
         onhover="onhoverIconinfo_left"
         onout="onoutIconinfo_left"


         width="15"
         height="prop"
         />
  <action name="onhoverIconinfo_left">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconinfo_left">
    hideTooltip();



  </action>



  
  <!-- Spot Style - hiddenSpotClick -->
  <style name="PolygonhiddenSpotClick"
           subdiv="true"
           visible="false"
           bordercolor="0xffffff"
           fillcolor="0xffffff"
           borderwidth="1"
           borderalpha="0"
           fillalpha="0"
           capture="false"
           onhover="onhoverPolygonhiddenSpotClick"
           onover="onoverPolygonhiddenSpotClick"
           onout="onoutPolygonhiddenSpotClick"
           />
  <action name="onhoverPolygonhiddenSpotClick">
    showTooltip('hotspot');
  </action>

  <action name="onoverPolygonhiddenSpotClick">
    set(borderwidth, 1);
  </action>

  <action name="onoutPolygonhiddenSpotClick">

    set(borderwidth, 1);
    hideTooltip();
  </action>



  
  <!-- Spot Style - hiddenSpotClick_outside -->
  <style name="PolygonhiddenSpotClick_outside"
           subdiv="true"
           visible="false"
           bordercolor="0xffffff"
           fillcolor="0xffffff"
           borderwidth="1"
           borderalpha="0"
           fillalpha="0"
           capture="false"
           onhover="onhoverPolygonhiddenSpotClick_outside"
           onover="onoverPolygonhiddenSpotClick_outside"
           onout="onoutPolygonhiddenSpotClick_outside"
           />
  <action name="onhoverPolygonhiddenSpotClick_outside">
    showTooltip('hotspot');
  </action>

  <action name="onoverPolygonhiddenSpotClick_outside">
    set(borderwidth, 1);
  </action>

  <action name="onoutPolygonhiddenSpotClick_outside">

    set(borderwidth, 1);
    hideTooltip();
  </action>



    
  <!-- Spot Style - goGoan -->


  <style name="IcongoGoan"
         url="%FIRSTXML%/spots/gaon_user_defaultpoint14.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoGoan"
         onover="onoverIcongoGoan"
         onout="onoutIcongoGoan"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoGoan">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoGoan">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoGoan">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - goBoai -->


  <style name="IcongoBoai"
         url="%FIRSTXML%/spots/boai_user_defaultpoint15.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoBoai"
         onover="onoverIcongoBoai"
         onout="onoutIcongoBoai"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoBoai">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoBoai">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoBoai">
    hideTooltip();
    tween(scale, 1);


  </action>



  
  <!-- Spot Style - floorLsit -->
  <style name="PolygonfloorLsit"
           subdiv="true"
           visible="false"
           bordercolor="0xffffff"
           fillcolor="0xffffff"
           borderwidth="2"
           borderalpha="0.50000762951094835"
           fillalpha="0.40000000000000002"
           capture="false"
           onhover="onhoverPolygonfloorLsit"
           onover="onoverPolygonfloorLsit"
           onout="onoutPolygonfloorLsit"
           />
  <action name="onhoverPolygonfloorLsit">
    showTooltip('hotspot');
  </action>

  <action name="onoverPolygonfloorLsit">
    set(bordercolor, 0xffffff);
    set(fillcolor, 0xffffff);
    set(borderalpha, 1);
    set(fillalpha, 0.59999999999999998);
    set(borderwidth, 3);
  </action>

  <action name="onoutPolygonfloorLsit">

    set(bordercolor, 0xffffff);
    set(fillcolor, 0xffffff);
    set(borderalpha, 0.50000762951094835);
    set(fillalpha, 0.40000000000000002);

    set(borderwidth, 2);
    hideTooltip();
  </action>



    
  <!-- Spot Style - goRoom_chiXiangHall -->


  <style name="IcongoRoom_chiXiangHall"
         url="%FIRSTXML%/spots/room01_user_defaultpoint16.png"
         visible="false"
         edge="center"
         onhover="onhoverIcongoRoom_chiXiangHall"
         onover="onoverIcongoRoom_chiXiangHall"
         onout="onoutIcongoRoom_chiXiangHall"


         width="150"
         height="prop"
         />
  <action name="onhoverIcongoRoom_chiXiangHall">
    showtooltip('hotspot');
  </action>
  <action name="onoverIcongoRoom_chiXiangHall">
tween(scale, 1.2);


  </action>
  <action name="onoutIcongoRoom_chiXiangHall">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - elevatorSpot -->


  <style name="IconelevatorSpot"
         url="%FIRSTXML%/spots/point03_user_defaultpoint17.png"
         visible="false"
         edge="center"
         onhover="onhoverIconelevatorSpot"
         onout="onoutIconelevatorSpot"


         width="15"
         height="prop"
         />
  <action name="onhoverIconelevatorSpot">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconelevatorSpot">
    hideTooltip();



  </action>



    
  <!-- Spot Style - leaveRoom_chiXiangHall -->


  <style name="IconleaveRoom_chiXiangHall"
         url="%FIRSTXML%/spots/room01_leave_user_defaultpoint18.png"
         visible="false"
         edge="center"
         onhover="onhoverIconleaveRoom_chiXiangHall"
         onover="onoverIconleaveRoom_chiXiangHall"
         onout="onoutIconleaveRoom_chiXiangHall"


         width="150"
         height="prop"
         />
  <action name="onhoverIconleaveRoom_chiXiangHall">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconleaveRoom_chiXiangHall">
tween(scale, 1.2);


  </action>
  <action name="onoutIconleaveRoom_chiXiangHall">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - lookElevactor -->


  <style name="IconlookElevactor"
         url="%FIRSTXML%/spots/hotspot_neutral_user_defaultpoint19.png"
         visible="false"
         edge="center"
         onhover="onhoverIconlookElevactor"
         onout="onoutIconlookElevactor"


         />
  <action name="onhoverIconlookElevactor">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconlookElevactor">
    hideTooltip();



  </action>


 <!-- 360Images Call Out Titles Plugin -->        <include url="%FIRSTXML%/graphics/callouttitles.xml"/>  <callout author_context="false"/> <style distancepopup="2" distancepopup.tablet="3" distancepopup.mobile="1" visible="false" callout_type="centerscreen" callout_type.mobile="centerscreen" callout_type.tablet="centerscreen" name="Default Point Spot Style" type="container" width="8" height="8"  bgroundedge="8"  bgcolor="0xffffff" bgalpha="1.00" bgborder="3 0xffffff 0.40" toheight="120" pumpitup="true" pumpitup.mobile="true" pumpitup.tablet="true"  rotate="0"   minfov="180" maxfov="1" minfov.mobile="180" maxfov.mobile="1" minfov.tablet="180" maxfov.tablet="1" onloaded=" txtadd(parentspot,'hotspot[',get(name),']');   txtadd(callout_line,'callout_line_',get(name)); addlayer(get(callout_line)); copy(hotspot[get(name)].callout_line,callout_line); layer[get(callout_line)].loadstyle(call_out_titlescallout_line); copy(layer[get(callout_line)].parent,parentspot); copy(layer[get(callout_line)].x,xpoint); copy(layer[get(callout_line)].y,ypoint);  txtadd(callout_line_vertical,'callout_line_vertical_',get(name)); addlayer(get(callout_line_vertical)); copy(hotspot[get(name)].callout_line_vertical,callout_line_vertical); layer[get(callout_line_vertical)].loadstyle(call_out_titlescallout_line_vertical); txtadd(parentlayer,'layer[',get(callout_line),']'); copy(layer[get(callout_line_vertical)].parent,parentlayer); txtadd(callout_title,'callout_title_',get(name)); addlayer(get(callout_title)); copy(hotspot[get(name)].callout_title,callout_title); layer[get(callout_title)].loadstyle(call_out_titlescallout_title); txtadd(parentlayer2,'layer[',get(callout_line_vertical),']'); copy(layer[get(callout_title)].parent,parentlayer2); getmessage(montitre, get(tooltip)); copy(layer[get(callout_title)].html,montitre);  txtadd(callout_desc,'callout_desc_',get(name)); addlayer(get(callout_desc)); copy(hotspot[get(name)].callout_desc,callout_desc); layer[get(callout_desc)].loadstyle(call_out_titlescallout_desc); copy(layer[get(callout_desc)].parent,callout_title); getmessage(madesc, get(descriptionid)); copy(layer[get(callout_desc)].html,madesc);  if(hotspot[get(name)].onclick, copy(layer[get(callout_line_vertical)].onclick,hotspot[get(name)].onclick);set(layer[get(callout_line_vertical)].bgcapture,true)); if(hotspot[get(name)].callout_type == onuserclick, set(hotspot[get(name)].onclick,oncallout());set(hotspot[get(name)].bgcapture,true);set(hotspot[get(name)].handcursor,true)); if(hotspot[get(name)].callout_type == onover, set(hotspot[get(name)].onover,oncallout());set(hotspot[get(name)].onout,oncallin());set(hotspot[get(name)].bgcapture,true);set(hotspot[get(name)].handcursor,true)); set(events[testshotspots].onviewchanged,testhotspots();) "  oncallout="animate_callout(get(callout_line), get(callout_line_vertical), get(callout_title), get(callout_desc),get(toheight));" oncallin="animate_callin(get(callout_line), get(callout_line_vertical));" /> <style name="call_out_titlescallout_line" type="container" width="2" height="0" bgalpha="1" bgcolor="0xffffff" align="top" edge="bottom" /> <style name="call_out_titlescallout_line_vertical" type="container" width="0" height="0" bgcolor="0xffffff"   rotate="-0"   bgborder="0,0,0,2 0xffffff"        edge="bottomleft" align="topright"        maskchildren="true" /> <style name="call_out_titlescallout_title" type="text" enabled="false"  align="topleft" ox="6"     bg="true" bgcolor="0x00298f" bgalpha="0.90000762951094837"   bgborder="false"   css="color:#ffffff;font-family:微軟正黑體 Light;font-weight:bold;font-size:18px;text-align:left;"  padding="6 6" /> <style name="call_out_titlescallout_desc" type="text" enabled="false"  align="bottomleft" edge="topleft"     bg="false"   bgborder="false"      textshadow="1" textshadowrange="5.0" textshadowangle="45" textshadowcolor="0x000000" textshadowalpha="0"  css="color:#ffffff;font-family:Arial;font-size:18px;text-align:left;"  padding="5 0" /> <style name="call_out_titlescallout_pulse" type="container" align="center" bg="false" bgborder="4 0xffffff 0.50"  bgroundedge="calc:8 * 2"  width="8" height="8" onloaded="pulse(get(name))"/>  
    <!-- ********** -->
    <!-- HotspotStyle -->
    <!-- id : HotspotStyle -->
    <!-- ********** -->  
    <action name="HotspotStyle_set_css_Zindex" type="Javascript">
        caller.sprite.style.zIndex = "2500";
    </action>

    <!-- video -->
        <style name="RectVideomute"
            enabled="false"
            preload="true"
            />
    
    <!-- point -->

    <!-- polygon -->
    
    <!-- picture -->
    

    
 
    <!-- ********** -->
    <!-- HotspotStyle1 -->
    <!-- id : HotspotStyle1 -->
    <!-- ********** -->  
    <action name="HotspotStyle1_set_css_Zindex" type="Javascript">
        caller.sprite.style.zIndex = "2500";
    </action>

    <!-- video -->
        <style name="RectVideoplay"
            enabled="false"
            preload="true"
            />
    
    <!-- point -->

    <!-- polygon -->
    
    <!-- picture -->
    

    

    <!-- ********** -->
    <!-- FrontEndAction -->
    <!-- id : FrontEndAction -->
    <!-- ********** -->

      <events
              name="frontEndSetting"
              onloadcomplete="initFrontEnd();set(events[frontEndSetting].keep,false);"
              keep="true"
      />

      <events
              name="frontEndEvents"
              onnewscene="frontEndChangeScene();"
              onviewchange="frontEndChangeView();"
              keep="true"
      />

      <action name="initFrontEnd" type="Javascript"><![CDATA[
            const loadScript = (src, callback, position = "body") => {
                const script = document.createElement("script")
                script.src = src
                script.addEventListener("load", callback)
                const appendScript = () => {
                    const targetElement = position === "head" ? document.head : document.body;
                    targetElement.appendChild(script)
                }
                if (document.readyState === "complete" || document.readyState === "interactive") {
                    appendScript();
                } else {
                    document.addEventListener("DOMContentLoaded", appendScript)
                }
            }
            const checkFileExists = async (filePath) => {
                try {
                    const response = await fetch(filePath)
                    return response.ok
                } catch (error) {
                    return false
                }
            }

            loadScript("./frontEnd/main.js", () => {}, "head")
        ]]></action>

      <action name="frontEndEventAction">
        jscall(calc('window.frontEnd.eventState.eventText = "' + '%1' + '"'));
      </action>

      <action name="frontEndChangeScene">
        jscall(calc('window.frontEnd.eventState.scene = "' + xml.scene + '"'));
      </action>

      <action name="frontEndChangeView">
        jscall(calc('window.frontEnd.eventState.hLookAt = ' + view.hlookat));
        jscall(calc('window.frontEnd.eventState.vLookAt = ' + view.vlookat));
        jscall(calc('window.frontEnd.eventState.fov = ' + view.fov));
      </action>
 <!-- 360Images Call Out Titles Plugin -->      <callout author_context="false"/> <style distancepopup="2" distancepopup.tablet="3" distancepopup.mobile="5" visible="false" callout_type="centerscreen" callout_type.mobile="centerscreen" callout_type.tablet="centerscreen" name="info" type="container" width="10" height="10"  bgroundedge="10"  bgcolor="0xffffff" bgalpha="1.00" bgborder="2 0x0600d1 0.70" toheight="0" pumpitup="true" pumpitup.mobile="true" pumpitup.tablet="true"  rotate="180"   minfov="180" maxfov="1" minfov.mobile="180" maxfov.mobile="1" minfov.tablet="180" maxfov.tablet="1" onloaded=" txtadd(parentspot,'hotspot[',get(name),']');  txtadd(callout_pulse,'callout_pulse_',get(name)); addlayer(get(callout_pulse)); layer[get(callout_pulse)].loadstyle(call_out_titles1callout_pulse); copy(layer[get(callout_pulse)].parent,parentspot);   txtadd(callout_line,'callout_line_',get(name)); addlayer(get(callout_line)); copy(hotspot[get(name)].callout_line,callout_line); layer[get(callout_line)].loadstyle(call_out_titles1callout_line); copy(layer[get(callout_line)].parent,parentspot); copy(layer[get(callout_line)].x,xpoint); copy(layer[get(callout_line)].y,ypoint);  txtadd(callout_line_vertical,'callout_line_vertical_',get(name)); addlayer(get(callout_line_vertical)); copy(hotspot[get(name)].callout_line_vertical,callout_line_vertical); layer[get(callout_line_vertical)].loadstyle(call_out_titles1callout_line_vertical); txtadd(parentlayer,'layer[',get(callout_line),']'); copy(layer[get(callout_line_vertical)].parent,parentlayer); txtadd(callout_title,'callout_title_',get(name)); addlayer(get(callout_title)); copy(hotspot[get(name)].callout_title,callout_title); layer[get(callout_title)].loadstyle(call_out_titles1callout_title); txtadd(parentlayer2,'layer[',get(callout_line_vertical),']'); copy(layer[get(callout_title)].parent,parentlayer2); getmessage(montitre, get(tooltip)); copy(layer[get(callout_title)].html,montitre);  txtadd(callout_desc,'callout_desc_',get(name)); addlayer(get(callout_desc)); copy(hotspot[get(name)].callout_desc,callout_desc); layer[get(callout_desc)].loadstyle(call_out_titles1callout_desc); copy(layer[get(callout_desc)].parent,callout_title); getmessage(madesc, get(descriptionid)); copy(layer[get(callout_desc)].html,madesc);  if(hotspot[get(name)].onclick, copy(layer[get(callout_line_vertical)].onclick,hotspot[get(name)].onclick);set(layer[get(callout_line_vertical)].bgcapture,true)); if(hotspot[get(name)].callout_type == onuserclick, set(hotspot[get(name)].onclick,oncallout());set(hotspot[get(name)].bgcapture,true);set(hotspot[get(name)].handcursor,true)); if(hotspot[get(name)].callout_type == onover, set(hotspot[get(name)].onover,oncallout());set(hotspot[get(name)].onout,oncallin());set(hotspot[get(name)].bgcapture,true);set(hotspot[get(name)].handcursor,true)); set(events[testshotspots].onviewchanged,testhotspots();) "  oncallout="animate_callout(get(callout_line), get(callout_line_vertical), get(callout_title), get(callout_desc),get(toheight));" oncallin="animate_callin(get(callout_line), get(callout_line_vertical));" /> <style name="call_out_titles1callout_line" type="container" width="0" height="0" bgalpha="1" bgcolor="0xffffff" align="top" edge="bottom" /> <style name="call_out_titles1callout_line_vertical" type="container" width="0" height="0" bgcolor="0xffffff"   rotate="-180"   bgborder="0,0,0,0 0xffffff"          edge="topleft" align="topright"         maskchildren="true" /> <style name="call_out_titles1callout_title" type="text" enabled="false"  align="topleft" ox="10"     bg="true" bgcolor="0xb50000" bgalpha="0"   bgborder="false"   css="color:#ffffff;font-family:Arial;font-size:25px;text-align:left;"  padding="5 10" /> <style name="call_out_titles1callout_desc" type="text" enabled="false"  align="bottomleft" edge="topleft"     bg="false"   bgborder="false"      textshadow="1" textshadowrange="5.0" textshadowangle="45" textshadowcolor="0x000000" textshadowalpha="0"  css="color:#ffffff;font-family:Arial;font-size:18px;text-align:left;"  padding="5 0" /> <style name="call_out_titles1callout_pulse" type="container" align="center" bg="false" bgborder="3 0xffffff 1.00"  bgroundedge="calc:10 * 2"  width="10" height="10" onloaded="pulse(get(name))"/>  <!-- 360Images Call Out Titles Plugin -->      <callout author_context="false"/> <style distancepopup="2" distancepopup.tablet="3" distancepopup.mobile="5" visible="false" callout_type="centerscreen" callout_type.mobile="centerscreen" callout_type.tablet="centerscreen" name="info_left" type="container" width="10" height="10"  bgroundedge="10"  bgcolor="0xffffff" bgalpha="1.00" bgborder="2 0x0600d1 0.70" toheight="0" pumpitup="true" pumpitup.mobile="true" pumpitup.tablet="true"   rotate="-180"  minfov="180" maxfov="1" minfov.mobile="180" maxfov.mobile="1" minfov.tablet="180" maxfov.tablet="1" onloaded=" txtadd(parentspot,'hotspot[',get(name),']');  txtadd(callout_pulse,'callout_pulse_',get(name)); addlayer(get(callout_pulse)); layer[get(callout_pulse)].loadstyle(call_out_titles2callout_pulse); copy(layer[get(callout_pulse)].parent,parentspot);   txtadd(callout_line,'callout_line_',get(name)); addlayer(get(callout_line)); copy(hotspot[get(name)].callout_line,callout_line); layer[get(callout_line)].loadstyle(call_out_titles2callout_line); copy(layer[get(callout_line)].parent,parentspot); copy(layer[get(callout_line)].x,xpoint); copy(layer[get(callout_line)].y,ypoint);  txtadd(callout_line_vertical,'callout_line_vertical_',get(name)); addlayer(get(callout_line_vertical)); copy(hotspot[get(name)].callout_line_vertical,callout_line_vertical); layer[get(callout_line_vertical)].loadstyle(call_out_titles2callout_line_vertical); txtadd(parentlayer,'layer[',get(callout_line),']'); copy(layer[get(callout_line_vertical)].parent,parentlayer); txtadd(callout_title,'callout_title_',get(name)); addlayer(get(callout_title)); copy(hotspot[get(name)].callout_title,callout_title); layer[get(callout_title)].loadstyle(call_out_titles2callout_title); txtadd(parentlayer2,'layer[',get(callout_line_vertical),']'); copy(layer[get(callout_title)].parent,parentlayer2); getmessage(montitre, get(tooltip)); copy(layer[get(callout_title)].html,montitre);  txtadd(callout_desc,'callout_desc_',get(name)); addlayer(get(callout_desc)); copy(hotspot[get(name)].callout_desc,callout_desc); layer[get(callout_desc)].loadstyle(call_out_titles2callout_desc); copy(layer[get(callout_desc)].parent,callout_title); getmessage(madesc, get(descriptionid)); copy(layer[get(callout_desc)].html,madesc);  if(hotspot[get(name)].onclick, copy(layer[get(callout_line_vertical)].onclick,hotspot[get(name)].onclick);set(layer[get(callout_line_vertical)].bgcapture,true)); if(hotspot[get(name)].callout_type == onuserclick, set(hotspot[get(name)].onclick,oncallout());set(hotspot[get(name)].bgcapture,true);set(hotspot[get(name)].handcursor,true)); if(hotspot[get(name)].callout_type == onover, set(hotspot[get(name)].onover,oncallout());set(hotspot[get(name)].onout,oncallin());set(hotspot[get(name)].bgcapture,true);set(hotspot[get(name)].handcursor,true)); set(events[testshotspots].onviewchanged,testhotspots();) "  oncallout="animate_callout(get(callout_line), get(callout_line_vertical), get(callout_title), get(callout_desc),get(toheight));" oncallin="animate_callin(get(callout_line), get(callout_line_vertical));" /> <style name="call_out_titles2callout_line" type="container" width="0" height="0" bgalpha="1" bgcolor="0xffffff" align="top" edge="bottom" /> <style name="call_out_titles2callout_line_vertical" type="container" width="0" height="0" bgcolor="0xffffff"     rotate="180"   bgborder="0,0,0,0 0xffffff"          edge="topright" align="topleft"       maskchildren="true" /> <style name="call_out_titles2callout_title" type="text" enabled="false"   align="topright" ox="-10"    bg="true" bgcolor="0xb50000" bgalpha="0"   bgborder="false"   css="color:#ffffff;font-family:Arial;font-size:25px;text-align:right;"  padding="5 10" /> <style name="call_out_titles2callout_desc" type="text" enabled="false"   align="bottomright" edge="topright"    bg="false"   bgborder="false"      textshadow="1" textshadowrange="5.0" textshadowangle="45" textshadowcolor="0x000000" textshadowalpha="0"  css="color:#ffffff;font-family:Arial;font-size:18px;text-align:right;"  padding="5 0" /> <style name="call_out_titles2callout_pulse" type="container" align="center" bg="false" bgborder="3 0xffffff 1.00"  bgroundedge="calc:10 * 2"  width="10" height="10" onloaded="pulse(get(name))"/> 
    <!-- ********** -->
    <!-- CameraControl -->
    <!-- id : CameraControl -->
    <!-- ********** -->
        <events name="CameraControl_event" 
                keep="true" />


    <action name="cameracontrol_areasCameraControl"> 
                def(styleNameCameraControl, string);
                def(hotspotNameCameraControl, string);
                set(styleNameCameraControl, IconlookElevactor);
                for(set(i,0), i LT hotspot.count, inc(i),  
                    if(hotspot[get(i)].style === styleNameCameraControl,
                        set(hotspotNameCameraControl,get(hotspot[get(i)].name));
                        ,
                    );
                );
                looktohotspot(get(hotspotNameCameraControl), 
                                30,
                                tween(easeinoutquad,
                                    0.7));
                wait(BLEND);
    </action>
  <!-- Sounds Management -->
  <plugin name="soundinterface"
          preload="true"
          url.flash="%VIEWER%/graphics/soundinterface.swf"
          url.html5="%FIRSTXML%/graphics/soundinterface.js"
          rootpath="%$videos_sounds_path%/sounds/"
          backgroundsound=""
          backgroundsoundloops="true"
          bgsound="false"
          bgsoundpaused="false"
          bgsoundloopended="false"
          bgsoundtoforce = "false"
          volumeinitialized="false"
          autopause="true"
          autounlock="true"
          worldscale="1.0"
          started="true"
          keep="true"/>
  
  <events name="soundmanagementevents"
          onnewpano="if(plugin[soundinterface].started,playbackgroundsound(););"
          onxmlcomplete="soundinterfaceonxmlcomplete();"
          keep="true"/>
  
  <action name="soundinterfaceonxmlcomplete">
    ifnot(plugin[soundinterface].volumeinitialized,
      div(plugin[soundinterface].volume, tour_soundsvolume, 100);
      set(plugin[soundinterface].volumeinitialized,true);
    );
  </action>
  
  <action name="playsound3Dwhenpossible">
    set(really_play_sound, true);
    if (tour_current_played_sound,
      if (%1 == tour_current_played_sound,
        delete(tour_current_played_sound);
        set(tour_current_played_sound_state, 0);
        delete(tour_current_played_sound_paused);
        stopsound(%1);
        set(really_play_sound, false);
        if(%4,
          delete(tour_current_played_sound_pausesound);
          resumeTourSoundsActions(true,true,true,true,true);
        );
      );
    );
    if (really_play_sound,
      if (tour_current_played_sound,
        stopsound(get(tour_current_played_sound));

        ifnot(%4,
          if(tour_current_played_sound_pausesound,
            delete(tour_current_played_sound_pausesound);
            resumeTourSoundsActions(true,true,true,true,true);
          );
        );
      );
      if(%4,
        set(tour_current_played_sound_pausesound, true);
        pauseTourSoundsActions(true,false,true,true,true);
      );
      set(tour_current_played_sound, %1);
      if(tour_current_played_video,
        set(tour_current_played_sound_state, 2);
      ,
        set(tour_current_played_sound_state, 1);
      );
      set(tour_current_played_sound_paused, false);
      if (%3,
        div(volume, tour_soundsvolume, 100);
        if(%9 != null,
          if(%8 == 0,
            playsound_at_hv(%1, %2, %5, %6, 1000, true, get(volume), %7, stopsound3Dwhenpossible(%1,%4));
          ,
            playsound_at_hv(%1, %2, %5, %6, 1000, false, get(volume), %7, stopsound3Dwhenpossible(%1,%4));
          );
          setup3dsound(%1, 1.0, 1.0, inverse, HRTF);
        ,
          if(%8 == 0,
            playsound_at_hv(%1, %2, %5, %6, 1000, true, get(volume), %7);
          ,
            playsound_at_hv(%1, %2, %5, %6, 1000, false, get(volume), %7);
          );
          setup3dsound(%1, 1.0, 1.0, inverse, HRTF)
        );
      ,
        if(%6 != null,
          playsound(%1,%2,%5,stopsound3Dwhenpossible(%1,%4));
        ,
          playsound(%1,%2,%5);
        );
      );

      ifnot(tour_soundson,
        set(tour_current_played_sound_paused, true);
        pausesound(%1);
      );
    );
  </action>
  <action name="stopsound3Dwhenpossible">
    if (%1 == tour_current_played_sound,
      delete(tour_current_played_sound);
      set(tour_current_played_sound_state, 0);
      delete(tour_current_played_sound_paused);
      stopsound(%1);
      if(%2,
        delete(tour_current_played_sound_pausesound);
        resumeTourSoundsActions(true,true,true,true,true);
      );
    );
  </action>
  <action name="playbackgroundsound">
  if(playsound,
    if (xml.scene,
      if (scene[get(xml.scene)].backgroundsound,
        if (plugin[soundinterface].backgroundsound != scene[get(xml.scene)].backgroundsound,
          copy(plugin[soundinterface].backgroundsound, scene[get(xml.scene)].backgroundsound);
          copy(plugin[soundinterface].backgroundsoundloops, scene[get(xml.scene)].backgroundsoundloops);
          if (tour_soundson,
            set(plugin[soundinterface].bgsound, true);
            set(plugin[soundinterface].bgsoundpaused, false);
            set(plugin[soundinterface].bgsoundloopended, false);
            set(plugin[soundinterface].bgsoundtoforce, false);
            if(scene[get(xml.scene)].video == false OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              ifnot(plugin[soundinterface].backgroundsoundloops,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops), stopbackgroundsoundoncomplete());
              ,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops));
              );
            );
           ,
            set(plugin[soundinterface].bgsoundtoforce, true);
            set(plugin[soundinterface].bgsound, false);
          );
        ,
          if (tour_soundson,
            if((plugin[soundinterface].bgsoundpaused == true AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              resumesound(bgsoundname);
              set(plugin[soundinterface].bgsoundpaused, false);
            );
          ,
            set(plugin[soundinterface].bgsoundtoforce, true);
            set(plugin[soundinterface].bgsound, false);
          );
        );
      );
    );
  ,
    delayedcall(0.2, playbackgroundsound());
  );
  </action>
  <action name="stopbackgroundsoundoncomplete">
    if (plugin[soundinterface].backgroundsound,
    ifnot(plugin[soundinterface].backgroundsoundloops,
      set(plugin[soundinterface].backgroundsoundloops, true);
      set(plugin[soundinterface].bgsound, false);
      set(plugin[soundinterface].bgsoundpaused, false);
      set(plugin[soundinterface].bgsoundloopended, true);
    );
    );
  </action>
  <action name="resetbackgroundsoundifneeded">
    if (xml.scene,
      if (scene[get(xml.scene)].backgroundsound != scene[%1].backgroundsound,
        if(plugin[soundinterface].backgroundsound,
          stopsound(bgsoundname);
        );
        set(plugin[soundinterface].backgroundsound, "");
        set(plugin[soundinterface].backgroundsoundloops, true);
        set(plugin[soundinterface].bgsound, false);
        set(plugin[soundinterface].bgsoundpaused, false);
        set(plugin[soundinterface].bgsoundloopended, false);
      );
    );
  </action>
  <action name="pausebackgroundsound">
    if(plugin[soundinterface].backgroundsound,
      if (plugin[soundinterface].bgsound,
        if(plugin[soundinterface].bgsoundpaused == false AND plugin[soundinterface].bgsoundloopended == false,
          pausesound(bgsoundname);
          set(plugin[soundinterface].bgsoundpaused, true);
        );
      );
    );
    
  </action>
  <action name="resumebackgroundsound">
    set(bgSoundOnResume, true);
    set(forceBgSoundOnResume, true);
    if(layer[displayedStandardVideo],
    if(layer[displayedStandardVideo].pausebgsound AND tour_current_played_video,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    ););
    if(layer[webvideodisplay_player],
    if(layer[webvideodisplay_player].pausebgsound AND tour_current_played_web_video,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    ););
    if(tour_current_played_sound_pausesound AND tour_current_played_sound,
      set(bgSoundOnResume, false);
    );
    ifnot(plugin[soundinterface].backgroundsound AND scene[get(xml.scene)].backgroundsound,
      set(bgSoundOnResume, false);
    );
    if(videospots_playing GT 0,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    );
    if(bgSoundOnResume,
      if (plugin[soundinterface].backgroundsound,
        if (tour_soundson,
          if (plugin[soundinterface].bgsound AND plugin[soundinterface].bgsoundloopended == false,
            if((plugin[soundinterface].bgsoundpaused == true AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              resumesound(bgsoundname);
              set(plugin[soundinterface].bgsoundpaused, false);
            );
          ,
            if(((plugin[soundinterface].bgsoundpaused == true OR plugin[soundinterface].bgsoundtoforce == true) AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              set(plugin[soundinterface].bgsound, true);
              set(plugin[soundinterface].bgsoundpaused, false);
              set(plugin[soundinterface].bgsoundloopended, false);
              set(plugin[soundinterface].bgsoundtoforce, false);
              ifnot(plugin[soundinterface].backgroundsoundloops,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops), stopbackgroundsoundoncomplete());
              ,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops));
              );
            );
          );
        );
      );
      
    ,
      if(forceBgSoundOnResume,
        playbackgroundsound();
        
      );
    );
  </action>
  <action name="preloadSounds">
  </action>

  <action name="play3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, playpanolocalsounds();););
  </action>
  <action name="stop3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, stoppanolocalsounds();););
  </action>
  <action name="resume3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, 
      set(kill3dSoundOnResume, true);
      if(layer[displayedStandardVideo],
      if(layer[displayedStandardVideo].pausebgsound,
      if(tour_current_played_video,
        set(kill3dSoundOnResume, false);
      );););
      if(layer[webvideodisplay_player],
      if(layer[webvideodisplay_player].pausebgsound,
      if(tour_current_played_web_video,
        set(kill3dSoundOnResume, false);
      );););
      if(tour_current_played_sound_pausesound,
      if(tour_current_played_sound,
        set(kill3dSoundOnResume, false);
      ););
      if(kill3dSoundOnResume,
        resumepanolocalsounds();
      );
    ););
  </action>
  
  <action name="pause3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, pausepanolocalsounds();););
  </action>
  <action name="set3DLocalSoundsVolume">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, setpanolocalsoundsvolume();););
  </action>
  
  <action name="playTourSounds">
    set(tour_soundson, true);
    events.dispatch(playtoursoundsevent);
    resumeTourSoundsActions(true,true,true,true,true);
  </action>
  
  <action name="stopTourSounds">
    set(tour_soundson, false);
    events.dispatch(stoptoursoundsevent);
    pauseTourSoundsActions(true,true,true,true,true);
  </action>
  
  <action name="setTourSoundsVolume">
    set(tour_soundsvolume, %1);
    events.dispatch(changetoursoundsevent);
    div(volume, tour_soundsvolume, 100);
    set(plugin[soundinterface].volume, get(volume));
    set3DLocalSoundsVolume();
  </action>
  
  <action name="playTourSoundsActions">
    if(%1,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
        play3DLocalSounds();
        );
      );
    );
    if(%2,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
          resumebackgroundsound();
        );
      );
    );
  </action>
  <action name="stopTourSoundsActions">
    if(%1,
      stop3DLocalSounds();
    );
    if(%2,
      stopSoundActionsSounds();
    );
    if(%3,
      stopVideoActionsSounds();
    );
    if(%4,
      pausebackgroundsound();
    );
  </action>
  <action name="resumeTourSoundsActions">
    if(%1,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
        resume3DLocalSounds();
        );
      );
    );
    if(%2,
      resumeSoundActionsSounds();
    );
    if(%3,
      resumeVideoActionsSounds();
    );
    if(%4,
      if(%5,
        if(plugin[soundinterface],
          if(plugin[soundinterface].started,
            resumebackgroundsound();
          );
        );
      ,
        pausebackgroundsound();
      );
    );
  </action>
  <action name="pauseTourSoundsActions">
    if(%1,
      pause3DLocalSounds();
    );
    if(%2,
      pauseSoundActionsSounds();
    );
    if(%3,
      pauseVideoActionsSounds();
    );
    if(%4,
      if(%5,
        pausebackgroundsound();
      ,
        if(plugin[soundinterface],
          if(plugin[soundinterface].started,
            resumebackgroundsound();
          );
        );
      );
    );
  </action>

  <action name="stopSoundActionsSounds">
    if (tour_current_played_sound,
      delete(tour_current_played_sound_paused);
      stopsound(get(tour_current_played_sound));
      delete(tour_current_played_sound);
      set(tour_current_played_sound_state, 0);
    );
  </action>
  <action name="stopVideoActionsSounds">
    if(tour_current_played_video,
      if(layer[displayedStandardVideo],
        layer[displayedStandardVideo].stop();
        removelayer(displayedStandardVideo);
        if(layer[displayedStandardVideoOverlayButton], removelayer(displayedStandardVideoOverlayButton); );
        if(layer[displayedStandardVideoOverlay], removelayer(displayedStandardVideoOverlay); );
        delete(tour_current_played_video);
        set(tour_current_played_video_state, 0);
      );
    );
    if(tour_current_played_web_video,
      displayWebVideoObjectClose();
    );
  </action>
  <action name="resumeSoundActionsSounds">
    if (tour_current_played_sound,
      set(resumeSoundActionsVerification, true);
      if(tour_current_played_video,
        if(tour_current_played_sound_state LT tour_current_played_video_state,
          set(resumeSoundActionsVerification, false);
        );
      );
      if(resumeSoundActionsVerification,
        if (tour_soundson,
          if(tour_current_played_sound_paused,
            set(tour_current_played_sound_paused, false);
            resumesound(get(tour_current_played_sound));
          );
        );
      );
    );
  </action>
  <action name="resumeVideoActionsSounds">
    if(tour_current_played_video,
      set(resumeVideoActionsVerification, true);
      if(tour_current_played_sound,
        if(tour_current_played_video_state LT tour_current_played_sound_state,
          set(resumeVideoActionsVerification, false);
        );
      );
      if(resumeVideoActionsVerification,
        if (tour_soundson,
          if(device.flash OR (device.webgl AND !device.ios),
            div(volume, tour_soundsvolume, 100);
            set(layer[displayedStandardVideo].volume, get(volume));
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.startVideosSounds(get(volume)));
            ,
              if(tour_soundsvolume GT 0,
                set(layer[displayedStandardVideo].muted, false);
              ,
                set(layer[displayedStandardVideo].muted, true);
              );
            );
          );
        ,
          if(device.flash OR (device.webgl AND !device.ios),
            set(layer[displayedStandardVideo].volume, 0);
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.stopVideosSounds());
            ,
              set(layer[displayedStandardVideo].muted, true);
            );
          );
        );
      );
    );
  </action>
  <action name="pauseSoundActionsSounds">
    if (tour_current_played_sound,
      ifnot(tour_current_played_sound_paused,
        set(tour_current_played_sound_paused, true);
        pausesound(get(tour_current_played_sound));
      );
    );
  </action>
  <action name="pauseVideoActionsSounds">
    if(tour_current_played_video,
      if(device.flash OR (device.webgl AND !device.ios),
        set(layer[displayedStandardVideo].volume, 0);
      ,
        ifnot(device.ios,
          js(kpanotour.Sounds.stopVideosSounds());
        ,
          set(layer[displayedStandardVideo].muted, true);
        );
      );
    );
  </action>

</krpano>